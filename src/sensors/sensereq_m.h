//
// Generated file, do not edit! Created by opp_msgc 4.4 from sensors/sensereq.msg.
//

#ifndef _SENSEREQ_M_H_
#define _SENSEREQ_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "ass.h"
    #include "mobility.h"
    typedef Ass* AssPtr;
    typedef Mobility* MobPtr;
// }}



/**
 * Class generated from <tt>sensors/sensereq.msg</tt> by opp_msgc.
 * <pre>
 * message SenseReq {
 *     AssPtr srcAss; 
 *     MobPtr srcMob; 
 * }
 * </pre>
 */
class SenseReq : public ::cMessage
{
  protected:
    AssPtr srcAss_var;
    MobPtr srcMob_var;

  private:
    void copy(const SenseReq& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SenseReq&);

  public:
    SenseReq(const char *name=NULL, int kind=0);
    SenseReq(const SenseReq& other);
    virtual ~SenseReq();
    SenseReq& operator=(const SenseReq& other);
    virtual SenseReq *dup() const {return new SenseReq(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual AssPtr& getSrcAss();
    virtual const AssPtr& getSrcAss() const {return const_cast<SenseReq*>(this)->getSrcAss();}
    virtual void setSrcAss(const AssPtr& srcAss);
    virtual MobPtr& getSrcMob();
    virtual const MobPtr& getSrcMob() const {return const_cast<SenseReq*>(this)->getSrcMob();}
    virtual void setSrcMob(const MobPtr& srcMob);
};

inline void doPacking(cCommBuffer *b, SenseReq& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SenseReq& obj) {obj.parsimUnpack(b);}


#endif // _SENSEREQ_M_H_
