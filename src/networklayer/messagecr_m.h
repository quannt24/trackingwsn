//
// Generated file, do not edit! Created by opp_msgc 4.3 from networklayer/messagecr.msg.
//

#ifndef _MESSAGECR_M_H_
#define _MESSAGECR_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>networklayer/messagecr.msg</tt> by opp_msgc.
 * <pre>
 * enum RoutingType {
 *     RT_TO_AN = 0; 
 *     RT_TO_BS = 1; 
 *     RT_BROADCAST = 2; 
 * };
 * </pre>
 */
enum RoutingType {
    RT_TO_AN = 0,
    RT_TO_BS = 1,
    RT_BROADCAST = 2
};

/**
 * Class generated from <tt>networklayer/messagecr.msg</tt> by opp_msgc.
 * <pre>
 * packet MessageCR {
 *     int routingType; 
 *     int desMacAddr; 
 *     bool preambleFlag = false; 
 *     int msgSize = 10;
 * }
 * </pre>
 */
class MessageCR : public ::cPacket
{
  protected:
    int routingType_var;
    int desMacAddr_var;
    bool preambleFlag_var;
    int msgSize_var;

  private:
    void copy(const MessageCR& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MessageCR&);

  public:
    MessageCR(const char *name=NULL, int kind=0);
    MessageCR(const MessageCR& other);
    virtual ~MessageCR();
    MessageCR& operator=(const MessageCR& other);
    virtual MessageCR *dup() const {return new MessageCR(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getRoutingType() const;
    virtual void setRoutingType(int routingType);
    virtual int getDesMacAddr() const;
    virtual void setDesMacAddr(int desMacAddr);
    virtual bool getPreambleFlag() const;
    virtual void setPreambleFlag(bool preambleFlag);
    virtual int getMsgSize() const;
    virtual void setMsgSize(int msgSize);
};

inline void doPacking(cCommBuffer *b, MessageCR& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MessageCR& obj) {obj.parsimUnpack(b);}


#endif // _MESSAGECR_M_H_
